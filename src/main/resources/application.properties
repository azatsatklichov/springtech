server.port = 9999

logging.level.org.springframework=INFO
logging.level.net.sahet.springtech=INFO
logging.level.com.zaxxer=DEBUG
logging.level.root=ERROR
logging.pattern.console=%-5level %logger{36} - %msg%n

## By default, Spring Boot 2 uses HikariCP as the database connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.hikari.poolName=HikariPoolZZZ

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/springtech
spring.datasource.username=postgres
spring.datasource.password=postgres

#drop n create table again, just for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=update
pring.jpa.database-platform=org.hibernate.dialect.MySQL57Dialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.flyway.url = jdbc:postgresql://localhost:5432/springtech
#spring.flyway.schemas = USERSERVICE
spring.flyway.user = postgres
spring.flyway.password = postgres
#spring.flyway.locations=filesystem:/flyway/migration
spring.flyway.locations=classpath:flyway/migration


#mail SMTP server
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=pandc
#spring.mail.password=pandc

# Other properties
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
#spring.mail.properties.mail.smtp.starttls.enable=true

# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

spring.thymeleaf.cache=false
welcome.message:SpringTech
